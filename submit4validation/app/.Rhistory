save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
df <- mtcars[, c("mpg", "cyl", "wt", "qsec", "vs", "gear")]
regression_impact(mtcars, disp, mpg, wt)
output <- readRDS("../tests/testthat/output_hypegrammaR.RDS")
for(i in c(5:8,20:25)){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
debug(save_graph_FS)
for(i in c(5:8,20:25)){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
# Check if ...
# filename <- "test9.jpg"
if(is.null(ggplot_object)){ #| !ggplot2::is.ggplot(ggplot_object) objet grid.arrange -> verifier la class
stop("Please enter a valid value to ggplot_object parameter. It has to be a ggplot object.")
}
if(is.null(filename) | !is.character(filename)){
stop("Please enter a valid value to filename parameter.")
}
if(!("ggsave_parameters" %in% names(attributes(ggplot_object)))){
stop("can only save ggplot objects produced with visualisationIMPACT")
}
ggsave_parameters<-attributes(ggplot_object)$ggsave_parameters
if(!("num_bar" %in% names(ggsave_parameters))){
stop("Can not find number of element in plot")
}
if(!("direction_plot" %in% names(ggsave_parameters))){
stop("Can not find orientation of the plot")
}
num_element <- attributes(ggplot_object)$ggsave_parameters$num_bar #bar ou boxplot
direction_plot <- attributes(ggplot_object)$ggsave_parameters$direction_plot
max_length_label <- attributes(ggplot_object)$ggsave_parameters$max_length_label
max_length_numbers <- attributes(ggplot_object)$ggsave_parameters$max_length_numbers
## calculer le largeur et hauteur
list_size <- set_size_output(type = "FS", as.numeric(num_element), direction_plot, as.numeric(max_length_label), as.numeric(max_length_numbers))
list_size
debug(set_size_output)
## calculer le largeur et hauteur
list_size <- set_size_output(type = "FS", as.numeric(num_element), direction_plot, as.numeric(max_length_label), as.numeric(max_length_numbers))
widthA4 <- 21
heightA4 <- 29.7
widthFS = (widthA4-3)/2
heightFS = (heightA4-3.7)/4
direction_plot
num_element
type
max_length_label
max_length_numbers
data <- output$results[[5]]$summary.statistic
data <- output$results[[5]]$summary.statistic
data
data$numbers
data <- output$results[[5]]$summary.statistic
data
source('~/GitHub/visualisationIMPACT/R/utilities.R')
source('~/GitHub/visualisationIMPACT/R/utilities.R')
for(i in c(5:8,20:25)){
data <- output$results[[5]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
undebug(save_graph_FS)
for(i in c(5:8,20:25)){
data <- output$results[[5]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
debug(set_size_output)
for(i in c(5:8,20:25)){
debug8data <- output$results[[5]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
undebug(set_size_output)
undebug(set_size_output)
un
for(i in c(5:8,20:25)){
debug8data <- output$results[[5]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
for(i in c(5:8,20:25)){
debug8data <- output$results[[5]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
for(i in c(5:8,20:25)){
debug8data <- output$results[[5]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
for(i in c(5:8,20:25)){
debug8data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
for(i in c(5:8,20:25)){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
debug(barchart_impact)
for(i in c(5:8,20:25)){
data <- output$results[[5]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
x <- enquo(x)
y<-enquo(y)
infimum_error <- enquo(infimum_error)
supremum_error<-enquo(supremum_error)
# Check and return message if empty evironnement
stop_msg <- error_message_empty_env_barchart( x,subset.x = NULL, y, infimum_error, supremum_error)
if(stop_msg != ""){
stop(paste0("The variable(s) following does not exist in .data: ",stop_msg))
}
if(sens.barchart != "vertical" & sens.barchart != "horizontal"){
stop("Please enter a valid value to the parameter sens.barchart: 'vertical' or 'horizontal'")
}
if(!is.logical(percent)){
stop("Please enter a valid value to the parameter percent: TRUE or FALSE")
}
# No percentages > 100
if(percent == TRUE & TRUE %in% (rlang::eval_tidy(y,.data)*scale.percent > 100) ){
stop("One of the percentages given is greater than 100 %. Please enter valid numbers.")
}
#No plot if y is NA
check_contains_only_NA(x,.data)
check_contains_only_NA(y,.data)
theplot <-  ggplot(.data, aes(x = !!x , y = (!!y)*scale.percent ))
plot_bars <- theplot + geom_bar_impact( fill = reach_style_color_red() )  + theme_impact() + theme_bar()
plot_numbers <- add_stat_to_barchart(theplot, .data , x , y , supremum_error, scale.percent, percent) + theme_numbers()
if (rlang::quo_is_null(infimum_error) | rlang::quo_is_null(supremum_error)) {
warning("Could not find the min or max column. No error bars will be added to the barchart")
}
rlang::quo_is_null(infimum_error)
rlang::quo_is_null(supremum_error)
# Add error bar to the plot
infimum_error_without_negative <- check_and_replace_negative_value(.data, infimum_error)
infimum_error_without_negative
supremum_error_without_negative <- check_and_replace_negative_value(.data,supremum_error)
supremum_error_without_negative
plot_bars <- plot_bars + geom_errorbar_impact(aes( x= !!x,
ymin = as.numeric(infimum_error_without_negative),
ymax = as.numeric(supremum_error_without_negative)))
undebug(barchart_impact)
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
for(i in c(5:8,20:25)){
data <- output$results[[5]]$sundebig(ummary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
for(i in c(5:8,20:25)){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
for(i in c(5:8,20:25)){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
data <- output$results[[5]]$summary.statistic
output$results[[5]]$summary.statistic
output$results[[6]]$summary.statistic
output$results[[7]]$summary.statistic
for(i in c(5:8,20:25)){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
i=13
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
testthat::expect_error(plot<- barchart_impact(data,x = dependent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE))
for(i in c(14:19,26,29)){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = dependent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
# library("visualisationIMPACT")
library(magrittr)
library("ggthemes")
library("rlang")
library(extrafont)
library(gridExtra)
library(grid)
library(ggplot2)
data<-read.csv("../tests/testthat/testdata.csv")
dependent.var = "hhnumberindividuals"
independent.var = "region"
result <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c(average=mean,min=min,max=max))
extrafont::loadfonts(device="win")
1
sens <- orientation_plot(result, region,6, 10)
result$min <- c(2,2,5,3,NA,3,3)
theplot <- barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = "vertical", percent = TRUE, scale.percent = 1)
save_graph_FS(ggplot_object = theplot, filename = "test1.jpg", path = "./" )
result$average <- c(0.5,0.50, 0.30, 0.70, 0.3, 0.8, 0.1)
theplot <- barchart_impact(.data = result, x = region, y = average, sens.barchart = "vertical", percent = TRUE, scale.percent = 100)
save_graph_FS(ggplot_object = theplot, filename = "test2.jpg", path = "./" )
result$average <- c(200, 50,40,30, 10,5,40)
testthat::expect_error(barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE, scale.percent = 100))
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.7012, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
sens <- orientation_plot(table_result, region, 10, 10)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = TRUE, scale.percent = 100 )
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
# library("visualisationIMPACT")
library(magrittr)
library("ggthemes")
library("rlang")
library(extrafont)
library(gridExtra)
library(grid)
library(ggplot2)
data<-read.csv("../tests/testthat/testdata.csv")
dependent.var = "hhnumberindividuals"
independent.var = "region"
result <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c(average=mean,min=min,max=max))
extrafont::loadfonts(device="win")
1
sens <- orientation_plot(result, region,6, 10)
result$min <- c(2,2,5,3,NA,3,3)
theplot <- barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = "vertical", percent = TRUE, scale.percent = 1)
save_graph_FS(ggplot_object = theplot, filename = "test1.jpg", path = "./" )
result$average <- c(0.5,0.50, 0.30, 0.70, 0.3, 0.8, 0.1)
theplot <- barchart_impact(.data = result, x = region, y = average, sens.barchart = "vertical", percent = TRUE, scale.percent = 100)
save_graph_FS(ggplot_object = theplot, filename = "test2.jpg", path = "./" )
result$average <- c(200, 50,40,30, 10,5,40)
testthat::expect_error(barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE, scale.percent = 100))
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.7012, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
sens <- orientation_plot(table_result, region, 10, 10)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = TRUE, scale.percent = 100 )
# library("visualisationIMPACT")
library(magrittr)
library("ggthemes")
library("rlang")
library(extrafont)
library(gridExtra)
library(grid)
library(ggplot2)
data<-read.csv("../tests/testthat/testdata.csv")
dependent.var = "hhnumberindividuals"
independent.var = "region"
result <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c(average=mean,min=min,max=max))
extrafont::loadfonts(device="win")
1
sens <- orientation_plot(result, region,6, 10)
result$min <- c(2,2,5,3,NA,3,3)
theplot <- barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = "vertical", percent = TRUE, scale.percent = 1)
save_graph_FS(ggplot_object = theplot, filename = "test1.jpg", path = "./" )
result$average <- c(0.5,0.50, 0.30, 0.70, 0.3, 0.8, 0.1)
theplot <- barchart_impact(.data = result, x = region, y = average, sens.barchart = "vertical", percent = TRUE, scale.percent = 100)
save_graph_FS(ggplot_object = theplot, filename = "test2.jpg", path = "./" )
result$average <- c(200, 50,40,30, 10,5,40)
testthat::expect_error(barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE, scale.percent = 100))
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.7012, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
sens <- orientation_plot(table_result, region, 10, 10)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = TRUE, scale.percent = 100 )
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
source('~/GitHub/visualisationIMPACT/R/barchart_functions.R')
# library("visualisationIMPACT")
library(magrittr)
library("ggthemes")
library("rlang")
library(extrafont)
library(gridExtra)
library(grid)
library(ggplot2)
data<-read.csv("../tests/testthat/testdata.csv")
dependent.var = "hhnumberindividuals"
independent.var = "region"
result <- data %>% dplyr::select(c( independent.var , dependent.var)) %>% dplyr::group_by_(independent.var) %>% dplyr::summarise_all(c(average=mean,min=min,max=max))
extrafont::loadfonts(device="win")
1
sens <- orientation_plot(result, region,6, 10)
result$min <- c(2,2,5,3,NA,3,3)
theplot <- barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = "vertical", percent = TRUE, scale.percent = 1)
save_graph_FS(ggplot_object = theplot, filename = "test1.jpg", path = "./" )
result$average <- c(0.5,0.50, 0.30, 0.70, 0.3, 0.8, 0.1)
theplot <- barchart_impact(.data = result, x = region, y = average, sens.barchart = "vertical", percent = TRUE, scale.percent = 100)
save_graph_FS(ggplot_object = theplot, filename = "test2.jpg", path = "./" )
result$average <- c(200, 50,40,30, 10,5,40)
testthat::expect_error(barchart_impact(.data = result, x = region, y = average, infimum_error = min, supremum_error = max, sens.barchart = sens, percent = TRUE, scale.percent = 100))
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
result_percent= c(0.5,0.50, 0.30, 0.7012, 0.45,0.55, 0.90,0.10)
min_value <- result_percent-5
max_value <- result_percent+5
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
sens <- orientation_plot(table_result, region, 10, 10)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart=sens, percent = TRUE, scale.percent = 100 )
save_graph_FS(ggplot_object = theplot, filename = "test3.jpg", path = "./" )
regions.value=c("capitalcentral","capitalcentral","capitalcentral","north", "north","north","south","south","south","west","west","west")
choices_value=c("yes","no", "bb","yes","no", "bb","yes","no","bb","yes","no","bb")
result_percent=c(40,50,100,30,200,30,50,70, 20,50, 60, 70 )
min_value <- result_percent - 10
max_value <-result_percent + 20
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = FALSE )
save_graph_FS(ggplot_object = theplot, filename = "test4.jpg", path = "./" )
regions.value=c("capitalcentral","capitalcentral","capitalcentral")
choices_value=c("yes","no", "bb")
result_percent=c(40,50,100)
min_value <- result_percent - 10
max_value <-result_percent + 20
table_result <- data.frame(region=regions.value, choice=choices_value, percents=result_percent, infimum_error=min_value, supremum_error=max_value)
theplot <- grouped_barchart_impact(table_result, region , choice , percents, infimum_error, supremum_error, sens.barchart="vertical", percent = FALSE )
## legende trop grande
save_graph_FS(ggplot_object = theplot, filename = "test5.jpg", path = "./" )
regions.value="capitalcentral"
median_value=20
first_quantile <- 5
third_quantile <- 30
min_value <- 2.5
max_value <- 80
outliers_min <- 1
outliers_max <- NA
result_box <- data.frame(region=regions.value, median=median_value, min= min_value, max = max_value, first_quantile = first_quantile, third_quantile = third_quantile,outlier_min = outliers_min, outlier_max=outliers_max )
theplot <- boxplot_impact(result_box, region, "cashincome", median, first_quantile, third_quantile, min, max,outlier_min, outlier_max, sens.boxplot = "vertical")
save_graph_FS(ggplot_object = theplot, filename = "boxplot1.jpg", path = "./" )
regions.value=c("capitalcentral", "north","south","west")
median_value=c(20,50,100,30)
first_quantile <- c(5,30,90, 10)
third_quantile <- c(30,70, 130,50)
min_value <- c(5,30,90, 10) - 1.5
max_value <- c(30,70, 130,50) + 50
outliers_min <- c(1,NA,70, 5)
outliers_max <- c(NA,150, 200,120)
result_box <- data.frame(region=regions.value, median=median_value, min= min_value, max = max_value, first_quantile = first_quantile, third_quantile = third_quantile,outlier_min = outliers_min, outlier_max=outliers_max )
theplot <- boxplot_impact(result_box, region, "cashincome", median, first_quantile, third_quantile, min, max,outlier_min, outlier_max, sens.boxplot = "vertical")
save_graph_FS(ggplot_object = theplot, filename = "boxplot2.jpg", path = "./" )
regions.value=c("capitalcentral","capitalcentral", "north","north","south","south","west","west")
choices_value=c("yes","no","yes","no","yes","no","yes","no")
median_value=c(40,50,100,30,200,300,50,70 )
first_quantile <- c(20,30,90, 10,100,200,20,50)
third_quantile <- c(60,70, 130,50,250, 450, 60, 80)
min_value <- c(20,30,90, 10,100,200,20,50) - 10
max_value <- c(60,70, 130,50,250, 450, 60, 80) + 50
outliers_min <- c(1,10,NA, NA, NA, 50, NA, NA)
outliers_max <- c(NA,150, 200,120, NA, NA, NA, 200)
table_result <- data.frame(region=regions.value, subsection=choices_value,  median = median_value, min = min_value, max = max_value, first_quantile, third_quantile, outliers_min, outliers_max)
theplot <- grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "horizontal")
save_graph_FS(ggplot_object = theplot, filename = "boxplot3.jpg", path = "./" )
regions.value=c("capitalcentral","capitalcentral","capitalcentral","north", "north","north","south","south","south","west","west","west")
choices_value=c("yes","no", "bb","yes","no", "bb","yes","no","bb","yes","no","bb")
median_value=c(40,50,100,30,200,300,50,70, 20,50, 60, 70 )
first_quantile <- c(20,30,90, 10,100,200,20,50, 10,40,50,60)
third_quantile <- c(60,70, 130,50,250, 450, 60, 80, 40,60,80,100)
min_value <- c(20,30,90, 10,100,200,20,50, 10,40,50,60) - 10
max_value <- c(60,70, 130,50,250, 450, 60, 80, 40,60,80,100) + 50
outliers_min <- c(1,10,NA, NA, NA, 50, NA, NA, 5,30,10,10)
outliers_max <- c(NA,150, 200,120, NA, NA, NA, 300,100, 200, 300, 250)
table_result <- data.frame(region=regions.value, subsection=choices_value,  median = median_value, min = min_value, max = max_value, first_quantile, third_quantile, outliers_min, outliers_max)
theplot <- grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "horizontal")
save_graph_FS(ggplot_object = theplot, filename = "boxplot4.jpg", path = "./" )
# regions.value=c("capitalcentral", "north","south","west","capitalcentral","north","south","west")
# choices_value=c("yes","yes","yes","yes","no","no","no","no")
regions.value=c("capitalcentral", "north","west","west","capitalcentral","north","south","south")
choices_value=c("yes","yes","yes","no","no","no","no","yes")
median_value=c(40,50,100,30,200,300,50,70 )
first_quantile <- c(20,30,90, 10,100,200,20,50)
third_quantile <- c(60,70, 130,50,250, 450, 60, 80)
min_value <- c(20,30,90, 10,100,200,20,50) - 10
max_value <- c(60,70, 130,50,250, 450, 60, 80) + 50
outliers_min <- c(1,10,NA, NA, NA, 50, NA, NA)
outliers_max <- c(NA,150, 200,120, NA, NA, NA, 200)
table_result <- data.frame(region=regions.value, subsection=choices_value,  median = median_value, min = min_value, max = max_value, first_quantile, third_quantile, outliers_min, outliers_max)
theplot <- grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "horizontal")
save_graph_FS(ggplot_object = theplot, filename = "boxplot5.jpg", path = "./" )
# regions.value=c("capitalcentral", "north","south","west","capitalcentral","north","south","west")
# choices_value=c("yes","yes","yes","yes","no","no","no","no")
regions.value=c("capitalcentral", "north","west","west","capitalcentral","north","south","south")
choices_value=c(NA,"yes","yes","no","no",NA,"no","yes")
median_value=c(NA,50,100,30,200,300,50,70 )
first_quantile <- c(NA,30,90, 10,100,200,20,50)
third_quantile <- c(NA,70, 130,50,250, 450, 60, 80)
min_value <- c(NA,30,90, 10,100,200,20,50) - 10
max_value <- c(NA,70, 130,50,250, 450, 60, 80) + 50
outliers_min <- c(NA,10,NA, NA, NA, 50, NA, NA)
outliers_max <- c(NA,150, 200,120, NA, NA, NA, 200)
table_result <- data.frame(region=regions.value, subsection=choices_value,  median = median_value, min = min_value, max = max_value, first_quantile, third_quantile, outliers_min, outliers_max)
theplot <-grouped_boxplot_impact(table_result, region, subsection, "cashincome", median, min, max, first_quantile, third_quantile, outliers_min , outliers_max ,sens.boxplot = "horizontal")
save_graph_FS(ggplot_object = theplot, filename = "boxplot6.jpg", path = "./" )
output <- readRDS("../tests/testthat/output_hypegrammaR.RDS")
for(i in 1:4){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12)
theplot<- grouped_barchart_impact(data,x = dependent.var.value, subset.x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
for(i in c(5:8,20:25)){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = independent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = TRUE, scale.percent = 100)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
debug(save_graph_FS)
for(i in c(14:19,26,29)){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = dependent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
for(i in c(14:19,26,29)){
data <- output$results[[26]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = dependent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
# Check if ...
# filename <- "test9.jpg"
if(is.null(ggplot_object)){ #| !ggplot2::is.ggplot(ggplot_object) objet grid.arrange -> verifier la class
stop("Please enter a valid value to ggplot_object parameter. It has to be a ggplot object.")
}
if(is.null(filename) | !is.character(filename)){
stop("Please enter a valid value to filename parameter.")
}
if(!("ggsave_parameters" %in% names(attributes(ggplot_object)))){
stop("can only save ggplot objects produced with visualisationIMPACT")
}
ggsave_parameters<-attributes(ggplot_object)$ggsave_parameters
num_element <- attributes(ggplot_object)$ggsave_parameters$num_bar #bar ou boxplot
direction_plot <- attributes(ggplot_object)$ggsave_parameters$direction_plot
max_length_label <- attributes(ggplot_object)$ggsave_parameters$max_length_label
max_length_numbers <- attributes(ggplot_object)$ggsave_parameters$max_length_numbers
## calculer le largeur et hauteur
list_size <- set_size_output(type = "FS", as.numeric(num_element), direction_plot, as.numeric(max_length_label), as.numeric(max_length_numbers))
list_size
debug(set_size_output)
## calculer le largeur et hauteur
list_size <- set_size_output(type = "FS", as.numeric(num_element), direction_plot, as.numeric(max_length_label), as.numeric(max_length_numbers))
widthA4 <- 21
heightA4 <- 29.7
widthFS = (widthA4-3)/2
heightFS = (heightA4-3.7)/4
direction_plot
width = widthFS
max_length_label
max_length_numbers
max_length_numbers != 0 & max_length_numbers >= 7
should_be <- width*0.2*max_length_numbers/7
should_be
width
should_be <- width*0.2*max_length_numbers/7
should_be
width*0.2
width*0.2*max_length_numbers
should_be * width / 0.2
14.4/0.2
should_be / 0.2
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
source('~/GitHub/visualisationIMPACT/R/save_file.R')
# i= 12 contains NA
for(i in c(9:11,27,28)){
data <- output$results[[i]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = dependent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
for(i in c(14:19,26,29)){
data <- output$results[[26]]$summary.statistic
sens <- orientation_plot(.data = data, x.label = dependent.var.value,max_nbr_var = 6,size_max_label = 12 )
theplot<- barchart_impact(data,x = dependent.var.value , y = numbers, infimum_error = min , supremum_error = max, sens.barchart = sens , percent = FALSE)
save_graph_FS(ggplot_object = theplot, filename = paste0(as.character(i),"plot.jpg"), path = "./" )
}
shiny::runApp('GitHub/rcm_apps/submit4validation/app')
runApp('GitHub/rcm_apps/submit4validation/app')
researchcyclematrix:::g_sheets_append_row
runApp('GitHub/rcm_apps/submit4validation/app')
